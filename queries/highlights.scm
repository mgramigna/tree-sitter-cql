(identifier) @variable
(local_identifier) @variable
(literal) @constant.builtin
(version) @string
(valueset_id) @string
(boolean_literal) @constant.boolean
(type_name_identifier) @type
(access_modifier) @type.qualifier
(type_specifier) @type
(function_definition (identifier (default_identifier) @function))
(operand_definition (referential_identifier (identifier (default_identifier) @parameter)))
(context_definition (identifier (default_identifier) @constant.builtin))

[
  "after"
  ;TODO "aggregate"
  "all"
  "and"
  "as"
  "asc"
  "ascending"
  "before"
  "between"
  "by"
  "called"
  "case"
  "cast"
  "code"
  "codesystem"
  "codesystems"
  "collapse"
  "concept"
  "contains"
  "context"
  "convert"
  "day"
  "days"
  "default"
  "define"
  "desc"
  "descending"
  "difference"
  "display"
  "distinct"
  "div"
  "duration"
  "during"
  "else"
  "end"
  "ends"
  "except"
  "exists"
  "expand"
  "false"
  "flatten"
  "fluent"
  "from"
  "function"
  "hour"
  "hours"
  "if"
  "implies"
  "in"
  "include"
  "includes"
  "included in"
  "intersect"
  "is"
  "let"
  "library"
  "maximum"
  "meets"
  "millisecond"
  "milliseconds"
  "minimum"
  "minute"
  "minutes"
  "mod"
  "month"
  "months"
  "not"
  "null"
  "occurs"
  "of"
  "on or"
  "or"
  "or after"
  "or before"
  "or less"
  "or more"
  "or on"
  "overlaps"
  "parameter"
  "per"
  "point"
  "predecessor"
  "private"
  "properly"
  "public"
  "return"
  "same"
  "second"
  "seconds"
  "singleton"
  "start"
  "starting"
  "starts"
  "sort"
  "successor"
  "such that"
  "then"
  "timezone"
  "timezoneoffset"
  "to"
  "true"
  "Tuple"
  "union"
  "using"
  "valueset"
  "version"
  "week"
  "weeks"
  "where"
  "when"
  "width"
  "with"
  "within"
  "without"
  "xor"
  "year"
  "years"
] @keyword

[
 "function"
] @keyword.function

[
"("
")"
"["
"]"
"{"
"}"
] @punctuation.bracket

[
"="
"!="
"~"
"!~"
"<="
"<"
">"
">="
] @operator
